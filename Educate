<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>EDUcate ‚Äî Aprende, crece y transforma tu futuro</title>
  <style>
    :root{
      --blue:#1677ff;
      --blue-2:#1e90ff;
      --green:#22c55e;
      --yellow:#ffd24d;
      --purple:#7b2cbf;
      --card:#ffffff;
      --muted:#68707d;
      --glass: rgba(255,255,255,0.7);
      --shadow: 0 6px 20px rgba(16,24,40,0.08);
      --radius:14px;
      font-family: Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    }
    *{box-sizing:border-box}
    body{
      margin:0;
      background: linear-gradient(180deg,#eaf6ff 0%, #f7fbff 60%);
      color:#0f172a;
      -webkit-font-smoothing:antialiased;
      -moz-osx-font-smoothing:grayscale;
      min-height:100vh;
      display:flex;
      flex-direction:column;
    }
    header{
      display:flex;
      align-items:center;
      justify-content:space-between;
      gap:16px;
      padding:18px 28px;
      background:linear-gradient(90deg,var(--blue),var(--green));
      color:white;
      border-bottom-left-radius:18px;
      border-bottom-right-radius:18px;
      box-shadow: 0 6px 20px rgba(16,24,40,0.12);
    }
    .brand{display:flex;align-items:center;gap:12px}
    .brand svg{width:56px;height:56px;flex-shrink:0}
    .brand h1{font-size:20px;margin:0;font-weight:700;letter-spacing:0.2px}
    .brand p{margin:0;font-size:12px;opacity:0.95}
    .top-actions{display:flex;gap:8px;align-items:center}
    .btn{
      background:white;color:var(--blue);padding:8px 12px;border-radius:10px;border:none;font-weight:600;cursor:pointer;
      box-shadow: var(--shadow);
    }
    .btn-ghost{background:transparent;color:white;border:1px solid rgba(255,255,255,0.18)}
    main{max-width:1100px;margin:22px auto;padding:18px;width:calc(100% - 40px)}
    .hero{
      display:grid;grid-template-columns:1fr 420px;gap:20px;align-items:center;margin-bottom:18px;
      background: linear-gradient(180deg, rgba(255,255,255,0.9), rgba(255,255,255,0.6));
      padding:22px;border-radius:16px;box-shadow:var(--shadow);
    }
    .hero-left h2{font-size:28px;margin:0 0 10px 0}
    .hero-left p{margin:0 0 16px 0;color:var(--muted)}
    .features{display:flex;gap:12px;flex-wrap:wrap}
    .pill{background:var(--glass);padding:8px 10px;border-radius:999px;font-size:13px;color:var(--muted);display:flex;gap:8px;align-items:center}
    .hero-right{
      background: linear-gradient(180deg,#fff,#f7fbff);
      border-radius:12px;padding:14px;display:flex;flex-direction:column;gap:12px;align-items:center;
      min-height:260px;justify-content:center;
    }
    /* Courses grid */
    .courses{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:14px;margin-top:18px}
    .card{background:var(--card);padding:14px;border-radius:12px;box-shadow:var(--shadow);display:flex;flex-direction:column;gap:8px}
    .card h3{margin:0;font-size:16px}
    .meta{font-size:12px;color:var(--muted)}
    .card .actions{margin-top:auto;display:flex;gap:8px}
    .tag{background:linear-gradient(90deg,var(--yellow),#ffb84d);padding:6px 8px;border-radius:10px;font-weight:700;color:#263238;font-size:12px}
    /* Lesson modal */
    .overlay{position:fixed;inset:0;display:none;align-items:center;justify-content:center;background:rgba(6,12,34,0.4);z-index:60}
    .modal{width:min(920px,96%);background:white;border-radius:14px;padding:18px;box-shadow:0 20px 60px rgba(2,6,23,0.4)}
    .modal h3{margin:0 0 6px 0}
    .lesson-content{color:var(--muted);line-height:1.45}
    .grid-2{display:grid;grid-template-columns:1fr 300px;gap:12px}
    .quiz-option{border:1px dashed #e6eefb;padding:10px;border-radius:10px;cursor:pointer}
    .quiz-option.selected{background:linear-gradient(90deg,#eef6ff,#e8fff4);border:1px solid #bfe1ff}
    .close{background:#f3f4f6;border:none;padding:8px 12px;border-radius:10px;cursor:pointer}
    footer{max-width:1100px;margin:20px auto 40px;padding:12px;color:var(--muted);font-size:14px;text-align:center}
    /* responsive */
    @media (max-width:880px){
      .hero{grid-template-columns:1fr; padding:10px}
      .hero-right{order:-1}
      .grid-2{grid-template-columns:1fr}
    }
    /* colorful accents */
    .accent-row{display:flex;gap:10px;margin-top:10px;align-items:center}
    .accent-box{flex:1;padding:10px;border-radius:10px;color:white;font-weight:700;text-align:center}
    .accent-1{background:linear-gradient(90deg,var(--blue),var(--blue-2))}
    .accent-2{background:linear-gradient(90deg,var(--green),#10b981)}
    .accent-3{background:linear-gradient(90deg,var(--purple),#9b59ff)}
    /* small helpers */
    .muted{color:var(--muted);font-size:13px}
    .logo-slogan{color:var(--purple);font-weight:700;margin-top:10px}
    .logo-slogan small{font-weight:600;color:var(--purple)}
  </style>
</head>
<body>
  <header>
    <div class="brand" aria-hidden="false">
      <!-- Inline SVG logo: book + lightbulb -->
      <svg viewBox="0 0 72 72" role="img" aria-label="Logo EDUcate">
        <defs>
          <linearGradient id="g1" x1="0" x2="1">
            <stop offset="0" stop-color="#1677ff"/>
            <stop offset="1" stop-color="#22c55e"/>
          </linearGradient>
        </defs>
        <rect x="0" y="0" width="72" height="72" rx="14" fill="white" opacity="0.06"/>
        <!-- book -->
        <path d="M16 44c0-6 8-13 20-13s20 7 20 13v4H16v-4z" fill="#0f4fa8"/>
        <path d="M16 44c0-6 8-13 20-13" fill="none" stroke="#1e90ff" stroke-width="2"/>
        <!-- bulb -->
        <ellipse cx="36" cy="22" rx="9" ry="11" fill="#ffd24d"/>
        <rect x="31" y="30" width="10" height="5" rx="2" fill="#0b4a7a"/>
      </svg>
      <div>
        <h1>EDUcate</h1>
        <p>Aprende, crece y transforma tu futuro</p>
      </div>
    </div>
    <div class="top-actions">
      <button class="btn" id="exploreBtn">Explorar cursos</button>
      <button class="btn btn-ghost" id="signinBtn">Iniciar sesi√≥n</button>
    </div>
  </header>

  <main>
    <section class="hero" aria-labelledby="hero-title">
      <div class="hero-left">
        <h2 id="hero-title">EDUcate ‚Äî Aprender nunca fue tan f√°cil y divertido</h2>
        <p>Plataforma educativa interactiva con lecciones, juegos y mini-quizzes. Ideal para estudiantes de primaria y secundaria. Partes del contenido pueden guardarse para uso sin conexi√≥n.</p>
        <div class="features" role="list">
          <div class="pill" role="listitem">üìö Lecciones multimedia</div>
          <div class="pill" role="listitem">üèÜ Recompensas</div>
          <div class="pill" role="listitem">üîå Modo offline</div>
          <div class="pill" role="listitem">üåç Inclusivo</div>
        </div>

        <div class="accent-row" style="margin-top:18px">
          <div class="accent-box accent-1">Matem√°ticas</div>
          <div class="accent-box accent-2">Ciencias</div>
          <div class="accent-box accent-3">Ingl√©s</div>
        </div>
      </div>

      <div class="hero-right" aria-hidden="false">
        <!-- simple illustration as SVG background -->
        <svg width="100%" height="160" viewBox="0 0 500 200" preserveAspectRatio="xMidYMid meet" role="img" aria-label="Ilustraci√≥n EDUcate">
          <rect x="0" y="0" width="500" height="200" rx="12" fill="#ffffff" opacity="0.6"/>
          <g transform="translate(10,8)">
            <rect x="10" y="20" width="280" height="120" rx="12" fill="#0f4fa8"/>
            <rect x="22" y="32" width="256" height="96" rx="8" fill="#eaf6ff"/>
            <!-- icons inside screen -->
            <g transform="translate(40,46)">
              <rect x="0" y="0" width="56" height="56" rx="8" fill="#ffd24d"/>
              <rect x="72" y="0" width="56" height="56" rx="8" fill="#7b2cbf"/>
              <rect x="144" y="0" width="56" height="56" rx="8" fill="#22c55e"/>
            </g>
            <text x="40" y="135" font-family="Inter, Arial" font-size="14" fill="#ffffff">Demo: iconos de materias</text>
          </g>
        </svg>

        <div style="display:flex;gap:8px;width:100%;justify-content:space-between">
          <button class="btn" id="startCourseBtn">Comenzar ahora</button>
          <button class="btn btn-ghost" id="learnMoreBtn">C√≥mo funciona</button>
        </div>
      </div>
    </section>

    <!-- Cursos -->
    <section aria-label="Cursos">
      <h2 style="margin:12px 0 8px 0">Cursos disponibles</h2>
      <div class="courses" id="coursesGrid" role="list">
        <!-- Cards rendered by JS -->
      </div>
    </section>

    <!-- Tus cursos / Progreso -->
    <section style="margin-top:18px">
      <h2 style="margin:0 0 10px 0">Tu progreso</h2>
      <div id="progressArea" class="card" style="display:flex;gap:12px;align-items:center">
        <div style="flex:1">
          <div style="font-weight:700">Lecciones completadas: <span id="completedCount">0</span></div>
          <div class="muted">Tu progreso se guarda en este navegador.</div>
        </div>
        <div style="text-align:right">
          <button class="btn" id="resetProgress">Reiniciar progreso</button>
        </div>
      </div>
    </section>
  </main>

  <!-- Modal / Overlay -->
  <div class="overlay" id="overlay" role="dialog" aria-modal="true" aria-hidden="true">
    <div class="modal" id="modal">
      <div style="display:flex;align-items:center;justify-content:space-between;gap:12px">
        <div>
          <h3 id="modalTitle">Lecci√≥n</h3>
          <div class="muted" id="modalMeta">Curso ‚Ä¢ Nivel</div>
        </div>
        <div style="display:flex;gap:8px;align-items:center">
          <button class="close" id="modalSaveBtn">Guardar offline</button>
          <button class="close" id="modalCloseBtn">Cerrar</button>
        </div>
      </div>
      <hr style="margin:12px 0" />
      <div class="grid-2">
        <div>
          <div class="lesson-content" id="lessonContent"></div>
          <div style="margin-top:12px">
            <button class="btn" id="completeBtn">Marcar como completada</button>
          </div>
        </div>
        <aside>
          <div style="background:#fafaff;padding:12px;border-radius:10px">
            <strong>Mini-quiz</strong>
            <div id="quizArea" style="margin-top:10px"></div>
          </div>
        </aside>
      </div>
    </div>
  </div>

  <footer>
    EDUcate ‚Ä¢ Aprende, crece y transforma tu futuro ‚Äî Hecho para estudiantes y docentes.
  </footer>

  <script>
    // Sample course data
    const COURSES = [
      {
        id: 'eng-basic',
        title: 'Ingl√©s - Nivel b√°sico',
        level: 'Beginner',
        color: '#7b2cbf',
        description: 'Vocabulario y gram√°tica esencial para empezar a comunicarte.',
        lessons: [
          { id:'eng-l1', title:'Saludos e introducciones', content:'Aprende a saludar y presentarte en ingl√©s. Ej: Hello, My name is...', quiz:{q:'How do you say "Hola" in English?', opts:['Hello','Bye','Please','Thanks'], answer:0} },
          { id:'eng-l2', title:'Present simple b√°sico', content:'Uso del presente simple: I eat, you play, he studies.' }
        ]
      },
      {
        id: 'math-fund',
        title: 'Matem√°ticas - Fundamentos',
        level: 'Primaria',
        color: '#1677ff',
        description: 'Operaciones b√°sicas, comprensi√≥n num√©rica y problemas sencillos.',
        lessons: [
          { id:'math-l1', title:'Suma y resta', content:'Repasa sumas y restas con ejemplos y ejercicios pr√°cticos.', quiz:{q:'¬øCu√°nto es 7 + 5?', opts:['10','11','12','13'], answer:2} },
          { id:'math-l2', title:'Multiplicaci√≥n b√°sica', content:'Tablas del 2, 3 y 4 y ejercicios con pictogramas.' }
        ]
      },
      {
        id: 'sci',
        title: 'Ciencias Naturales',
        level: 'General',
        color: '#22c55e',
        description: 'Explora el ciclo del agua, plantas y animales con experimentos simples.',
        lessons: [
          { id:'sci-l1', title:'El ciclo del agua', content:'Evaporaci√≥n, condensaci√≥n y precipitaci√≥n explicados con dibujos.' }
        ]
      },
      {
        id: 'art',
        title: 'Arte y creatividad',
        level: 'All Ages',
        color: '#ffd24d',
        description: 'Proyectos art√≠sticos, colores y t√©cnicas simples para desarrollar la creatividad.',
        lessons: [
          { id:'art-l1', title:'Colores y mezclas', content:'Aprende c√≥mo mezclar colores y crear nuevos tonos.' }
        ]
      }
    ];

    // DOM refs
    const coursesGrid = document.getElementById('coursesGrid');
    const overlay = document.getElementById('overlay');
    const modal = document.getElementById('modal');
    const modalTitle = document.getElementById('modalTitle');
    const modalMeta = document.getElementById('modalMeta');
    const lessonContent = document.getElementById('lessonContent');
    const quizArea = document.getElementById('quizArea');
    const completeBtn = document.getElementById('completeBtn');
    const modalCloseBtn = document.getElementById('modalCloseBtn');
    const modalSaveBtn = document.getElementById('modalSaveBtn');
    const completedCount = document.getElementById('completedCount');
    const resetProgress = document.getElementById('resetProgress');

    // persistence
    const STORAGE_KEY = 'educate:completed';
    let completed = JSON.parse(localStorage.getItem(STORAGE_KEY)||'{}');

    function renderCourses(){
      coursesGrid.innerHTML = '';
      COURSES.forEach(c=>{
        const card = document.createElement('article');
        card.className = 'card';
        card.innerHTML = `
          <div style="display:flex;gap:12px;align-items:center">
            <div style="width:54px;height:54px;border-radius:12px;background:${c.color};display:flex;align-items:center;justify-content:center;font-weight:800;color:white">${c.title.split(' ')[0][0]}</div>
            <div style="flex:1">
              <h3>${c.title}</h3>
              <div class="meta">${c.level} ‚Ä¢ ${c.description}</div>
            </div>
          </div>
          <div class="actions">
            <button class="btn open" data-id="${c.id}">Abrir curso</button>
            <button class="btn btn-ghost preview" data-id="${c.id}">Ver lecciones</button>
          </div>
        `;
        coursesGrid.appendChild(card);
      });

      // attach
      document.querySelectorAll('.open').forEach(b=>{
        b.addEventListener('click', (e)=>{
          const id = e.currentTarget.dataset.id;
          openCourse(id);
        });
      });
      document.querySelectorAll('.preview').forEach(b=>{
        b.addEventListener('click', (e)=>{
          const id = e.currentTarget.dataset.id;
          previewCourse(id);
        });
      });
    }

    function openCourse(id){
      const course = COURSES.find(x=>x.id===id);
      // show a small list and allow opening lessons (reuse modal)
      modalTitle.textContent = course.title;
      modalMeta.textContent = course.level + ' ‚Ä¢ ' + course.description;
      lessonContent.innerHTML = '<strong>Lecciones:</strong><ul>' + course.lessons.map(l=>`<li style="margin:6px 0"><button class="btn" data-lesson="${l.id}">${l.title}</button></li>`).join('') + '</ul>';
      quizArea.innerHTML = '<div class="muted">Selecciona una lecci√≥n para ver su contenido y quiz.</div>';
      showModal();
      // attach lesson openers
      setTimeout(()=> document.querySelectorAll('[data-lesson]').forEach(btn=>{
        btn.addEventListener('click', (ev)=>{
          const lid = ev.currentTarget.dataset.lesson;
          openLessonById(lid);
        });
      }), 50);
    }

    function previewCourse(id){
      const course = COURSES.find(x=>x.id===id);
      alert(`${course.title}\n\n${course.description}\n\nLecciones: ${course.lessons.map(l=>l.title).join(', ')}`);
    }

    function openLessonById(lid){
      // find lesson within courses
      let lesson = null, course=null;
      for(const c of COURSES){
        const l = c.lessons.find(x=>x.id===lid);
        if(l){ lesson=l; course=c; break;}
      }
      if(!lesson) return;
      modalTitle.textContent = lesson.title;
      modalMeta.textContent = `${course.title} ‚Ä¢ ${course.level}`;
      lessonContent.innerHTML = `<p>${lesson.content}</p>`;
      // quiz render
      if(lesson.quiz){
        const quiz = lesson.quiz;
        quizArea.innerHTML = `<p style="margin:0 0 8px 0">${quiz.q}</p><div id="opts"></div>`;
        const optsDiv = document.getElementById('opts');
        quiz.opts.forEach((o,i)=>{
          const b = document.createElement('div');
          b.className = 'quiz-option';
          b.textContent = o;
          b.dataset.index = i;
          b.addEventListener('click', ()=>{
            document.querySelectorAll('.quiz-option').forEach(x=>x.classList.remove('selected'));
            b.classList.add('selected');
          });
          optsDiv.appendChild(b);
        });
        // attach check
        quizArea.appendChild(document.createElement('div'));
        const checkBtn = document.createElement('button');
        checkBtn.className='btn';
        checkBtn.textContent='Comprobar respuesta';
        checkBtn.style.marginTop='10px';
        checkBtn.addEventListener('click', ()=>{
          const sel = document.querySelector('.quiz-option.selected');
          if(!sel){ alert('Selecciona una opci√≥n'); return; }
          const idx = Number(sel.dataset.index);
          if(idx === quiz.answer){
            alert('¬°Correcto! üéâ');
            markCompleted(lesson.id);
          } else {
            alert('Respuesta incorrecta. Intenta otra vez.');
          }
        });
        quizArea.appendChild(checkBtn);
      } else {
        quizArea.innerHTML = '<div class="muted">No hay quiz en esta lecci√≥n.</div>';
      }
      showModal();
    }

    function showModal(){
      overlay.style.display = 'flex';
      overlay.setAttribute('aria-hidden','false');
      document.body.style.overflow = 'hidden';
      updateCompletedCount();
    }
    function hideModal(){
      overlay.style.display = 'none';
      overlay.setAttribute('aria-hidden','true');
      document.body.style.overflow = '';
    }

    function markCompleted(lessonId){
      completed[lessonId] = true;
      localStorage.setItem(STORAGE_KEY, JSON.stringify(completed));
      updateCompletedCount();
      alert('Lecci√≥n marcada como completada. ¬°Buen trabajo!');
    }

    function updateCompletedCount(){
      const count = Object.keys(completed).length;
      completedCount.textContent = count;
    }

    // save offline simulation
    function saveOfflineCurrent(){
      // look for modal title and simulate "saving"
      const key = 'offline:'+modalTitle.textContent;
      localStorage.setItem(key,'1');
      alert('Contenido guardado para acceso sin conexi√≥n (simulado).');
    }

    // reset
    resetProgress.addEventListener('click', ()=>{
      if(confirm('¬øSeguro que quieres reiniciar el progreso?')){
        completed = {};
        localStorage.removeItem(STORAGE_KEY);
        updateCompletedCount();
        alert('Progreso reiniciado.');
      }
    });

    // modal close handlers
    modalCloseBtn.addEventListener('click', hideModal);
    overlay.addEventListener('click', (e)=>{ if(e.target===overlay) hideModal(); });
    modalSaveBtn.addEventListener('click', saveOfflineCurrent);

    // start / explore
    document.getElementById('exploreBtn').addEventListener('click', ()=> window.scrollTo({top: document.querySelector('[aria-label="Cursos"]').offsetTop - 40, behavior:'smooth'}));
    document.getElementById('startCourseBtn').addEventListener('click', ()=> document.querySelector('.open').click());
    document.getElementById('signinBtn').addEventListener('click', ()=> alert('Funcionalidad de inicio de sesi√≥n demo.'));

    // initial render
    renderCourses();
    updateCompletedCount();

    // optionally pre-mark something (for demo)
    // completed['eng-l1'] = true;
    // localStorage.setItem(STORAGE_KEY, JSON.stringify(completed));
  </script>
</body>
</html>
